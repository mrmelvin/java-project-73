plugins {
	id 'application'
	id 'checkstyle'
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.adarshr.test-logger' version '2.1.1'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'org.liquibase.gradle' version '2.0.4'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

diffChangeLog {
	dependsOn compileJava
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.22'
	implementation(
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security',
			'io.jsonwebtoken:jjwt:0.9.1',
			// Зависимость для swagger
			// Позволяет сгенерировать и проматривать интерактивную документацию по API
			'org.springdoc:springdoc-openapi-ui:1.5.12',
			'org.liquibase:liquibase-core:4.6.1',
			'com.querydsl:querydsl-core:5.0.0',
			'com.querydsl:querydsl-jpa:5.0.0',
			'com.rollbar:rollbar-spring-boot-webmvc:1.8.1'
	)

	annotationProcessor(
			'org.projectlombok:lombok:1.18.22',
			'com.querydsl:querydsl-apt:5.0.0:jpa',
			'javax.annotation:javax.annotation-api:1.3.2',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	)

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core:4.6.1',
			'org.liquibase.ext:liquibase-hibernate5:4.5.0',
			'org.springframework.boot:spring-boot-starter-data-jpa'
	)

	runtimeOnly (
			'com.h2database:h2:1.4.200',
			'org.postgresql:postgresql:42.2.24'
	)

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

liquibase {
	activities {
		main {
			// Указываем путь, по которому будет сгенерирован файл миграции
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			// Указывем источник, с которым будут сравниваться изменения
			// Это база данных, изначально она пустая
			url 'jdbc:h2:./taskManager'
			// Имя пользователя и пароль для подключения к базе
			username ''
			password ''
			// Сравниваем с моделями, задавая пакет
			referenceUrl 'hibernate:spring:io.hexlet.javaspringblog.model.' +
					// Указываем диалект
					'?dialect=org.hibernate.dialect.H2Dialect' +
					// Указываем правила именования таблиц и столбцов,
					// чтобы они соответствовали правилам Spring
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

application {
	mainClass = 'hexlet.code.app.AppApplication'
}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean
